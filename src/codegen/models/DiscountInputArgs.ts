/* tslint:disable */
/* eslint-disable */
/**
 * Octane API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DiscountInputArgs
 */
export interface DiscountInputArgs {
    /**
     * Length, in billing cycles, that this discount will be active.
     * @type {number}
     * @memberof DiscountInputArgs
     */
    billingCycleDuration?: number;
    /**
     * 
     * @type {number}
     * @memberof DiscountInputArgs
     */
    amount?: number;
    /**
     * 
     * @type {string}
     * @memberof DiscountInputArgs
     */
    discountType?: DiscountInputArgsDiscountTypeEnum;
    /**
     * For METERED_COMPONENT scoped discounts: the UUID of the metered component that the discount covers.
     * @type {string}
     * @memberof DiscountInputArgs
     */
    meteredComponentUuid?: string;
    /**
     * The scope that this discount covers. One of 'INVOICE_TOTAL', 'ADD_ON', 'METERED_COMPONENT'.
     * @type {string}
     * @memberof DiscountInputArgs
     */
    scope?: DiscountInputArgsScopeEnum;
    /**
     * For METERED_COMPONENT scoped discounts: Dictionary of labels (key: value) that the discount covers. The entire set of labels must be provided.
     * @type {{ [key: string]: string; }}
     * @memberof DiscountInputArgs
     */
    labels?: { [key: string]: string; };
    /**
     * Offset, in number of billing cycles, for when this discount will apply. If set to 0, the discount will start applying from the current billing cycle. If set to 1, the discount will start applying from the next billing cycle, etc. For scheduled subscriptions, the offset starts from the initial billing cycle.
     * @type {number}
     * @memberof DiscountInputArgs
     */
    billingCycleStartOffset?: number;
    /**
     * For ADD_ON scoped discounts: the name of the add on that the discount covers.
     * @type {string}
     * @memberof DiscountInputArgs
     */
    addOnName?: string;
}

/**
* @export
* @enum {string}
*/
export enum DiscountInputArgsDiscountTypeEnum {
    Flat = 'FLAT',
    Percent = 'PERCENT'
}/**
* @export
* @enum {string}
*/
export enum DiscountInputArgsScopeEnum {
    InvoiceTotal = 'INVOICE_TOTAL',
    AddOn = 'ADD_ON',
    MeteredComponent = 'METERED_COMPONENT',
    BasePrice = 'BASE_PRICE'
}

export function DiscountInputArgsFromJSON(json: any): DiscountInputArgs {
    return DiscountInputArgsFromJSONTyped(json, false);
}

export function DiscountInputArgsFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiscountInputArgs {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'billingCycleDuration': !exists(json, 'billing_cycle_duration') ? undefined : json['billing_cycle_duration'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'discountType': !exists(json, 'discount_type') ? undefined : json['discount_type'],
        'meteredComponentUuid': !exists(json, 'metered_component_uuid') ? undefined : json['metered_component_uuid'],
        'scope': !exists(json, 'scope') ? undefined : json['scope'],
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
        'billingCycleStartOffset': !exists(json, 'billing_cycle_start_offset') ? undefined : json['billing_cycle_start_offset'],
        'addOnName': !exists(json, 'add_on_name') ? undefined : json['add_on_name'],
    };
}

export function DiscountInputArgsToJSON(value?: DiscountInputArgs | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'billing_cycle_duration': value.billingCycleDuration,
        'amount': value.amount,
        'discount_type': value.discountType,
        'metered_component_uuid': value.meteredComponentUuid,
        'scope': value.scope,
        'labels': value.labels,
        'billing_cycle_start_offset': value.billingCycleStartOffset,
        'add_on_name': value.addOnName,
    };
}


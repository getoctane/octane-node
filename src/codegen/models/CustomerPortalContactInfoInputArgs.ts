/* tslint:disable */
/* eslint-disable */
/**
 * Octane API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CustomerPortalContactInfoInputArgs
 */
export interface CustomerPortalContactInfoInputArgs {
    /**
     * 
     * @type {string}
     * @memberof CustomerPortalContactInfoInputArgs
     */
    state?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CustomerPortalContactInfoInputArgs
     */
    vatId?: string | null;
    /**
     * Customer name. Required only if using vendor API Key for authentication.
     * @type {string}
     * @memberof CustomerPortalContactInfoInputArgs
     */
    customerName?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerPortalContactInfoInputArgs
     */
    country?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CustomerPortalContactInfoInputArgs
     */
    city?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CustomerPortalContactInfoInputArgs
     */
    url?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CustomerPortalContactInfoInputArgs
     */
    addressLine2?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CustomerPortalContactInfoInputArgs
     */
    logoUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CustomerPortalContactInfoInputArgs
     */
    zipcode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CustomerPortalContactInfoInputArgs
     */
    phone?: string | null;
    /**
     * List of secondary contact emails (all email communication will also be sent to these emails).
     * @type {Array<string>}
     * @memberof CustomerPortalContactInfoInputArgs
     */
    secondaryEmails?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof CustomerPortalContactInfoInputArgs
     */
    addressLine1?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CustomerPortalContactInfoInputArgs
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CustomerPortalContactInfoInputArgs
     */
    legalName?: string | null;
}

export function CustomerPortalContactInfoInputArgsFromJSON(json: any): CustomerPortalContactInfoInputArgs {
    return CustomerPortalContactInfoInputArgsFromJSONTyped(json, false);
}

export function CustomerPortalContactInfoInputArgsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerPortalContactInfoInputArgs {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'state': !exists(json, 'state') ? undefined : json['state'],
        'vatId': !exists(json, 'vat_id') ? undefined : json['vat_id'],
        'customerName': !exists(json, 'customer_name') ? undefined : json['customer_name'],
        'country': !exists(json, 'country') ? undefined : json['country'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'addressLine2': !exists(json, 'address_line_2') ? undefined : json['address_line_2'],
        'logoUrl': !exists(json, 'logo_url') ? undefined : json['logo_url'],
        'zipcode': !exists(json, 'zipcode') ? undefined : json['zipcode'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'secondaryEmails': !exists(json, 'secondary_emails') ? undefined : json['secondary_emails'],
        'addressLine1': !exists(json, 'address_line_1') ? undefined : json['address_line_1'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'legalName': !exists(json, 'legal_name') ? undefined : json['legal_name'],
    };
}

export function CustomerPortalContactInfoInputArgsToJSON(value?: CustomerPortalContactInfoInputArgs | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'state': value.state,
        'vat_id': value.vatId,
        'customer_name': value.customerName,
        'country': value.country,
        'city': value.city,
        'url': value.url,
        'address_line_2': value.addressLine2,
        'logo_url': value.logoUrl,
        'zipcode': value.zipcode,
        'phone': value.phone,
        'secondary_emails': value.secondaryEmails,
        'address_line_1': value.addressLine1,
        'email': value.email,
        'legal_name': value.legalName,
    };
}


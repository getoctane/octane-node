/* tslint:disable */
/* eslint-disable */
/**
 * Octane API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AddOn,
    AddOnFromJSON,
    AddOnFromJSONTyped,
    AddOnToJSON,
} from './AddOn';
import {
    MeteredComponent,
    MeteredComponentFromJSON,
    MeteredComponentFromJSONTyped,
    MeteredComponentToJSON,
} from './MeteredComponent';

/**
 * 
 * @export
 * @interface Discount
 */
export interface Discount {
    /**
     * 
     * @type {any}
     * @memberof Discount
     */
    readonly discountType?: any | null;
    /**
     * 
     * @type {number}
     * @memberof Discount
     */
    amount?: number | null;
    /**
     * The date when the discount is applied from.
     * @type {Date}
     * @memberof Discount
     */
    startDate?: Date | null;
    /**
     * The date when the discount ends.
     * @type {Date}
     * @memberof Discount
     */
    endDate?: Date | null;
    /**
     * Offset in number of billing cycles for when this discount will apply. For example, if set to 1, the discount will apply from the start of the next billing cycle.
     * @type {number}
     * @memberof Discount
     */
    billingCycleStartOffset?: number;
    /**
     * Duration of this discount in number of billing cycles.
     * @type {number}
     * @memberof Discount
     */
    billingCycleDuration?: number | null;
    /**
     * The id of coupon associated with this discount, none if discount does not originate from coupon
     * @type {number}
     * @memberof Discount
     */
    couponId?: number | null;
    /**
     * External facing unique identifier of a price plan
     * @type {string}
     * @memberof Discount
     */
    externalUuid?: string;
    /**
     * The scope that this discount covers. One of 'INVOICE_TOTAL', 'ADD_ON', 'METERED_COMPONENT'.
     * @type {string}
     * @memberof Discount
     */
    scope: string;
    /**
     * Add-on this discount covers if scope is ADD_ON.
     * @type {AddOn}
     * @memberof Discount
     */
    addOn?: AddOn | null;
    /**
     * Metered Component this discount covers if scope is METERED_COMPONENT.
     * @type {MeteredComponent}
     * @memberof Discount
     */
    meteredComponent?: MeteredComponent | null;
    /**
     * Dictionary of labels (key: value) to which the discount applies if scope is METERED_COMPONENT.
     * @type {{ [key: string]: string; }}
     * @memberof Discount
     */
    labels?: { [key: string]: string; };
}

export function DiscountFromJSON(json: any): Discount {
    return DiscountFromJSONTyped(json, false);
}

export function DiscountFromJSONTyped(json: any, ignoreDiscriminator: boolean): Discount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'discountType': !exists(json, 'discount_type') ? undefined : json['discount_type'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'startDate': !exists(json, 'start_date') ? undefined : (json['start_date'] === null ? null : new Date(json['start_date'])),
        'endDate': !exists(json, 'end_date') ? undefined : (json['end_date'] === null ? null : new Date(json['end_date'])),
        'billingCycleStartOffset': !exists(json, 'billing_cycle_start_offset') ? undefined : json['billing_cycle_start_offset'],
        'billingCycleDuration': !exists(json, 'billing_cycle_duration') ? undefined : json['billing_cycle_duration'],
        'couponId': !exists(json, 'coupon_id') ? undefined : json['coupon_id'],
        'externalUuid': !exists(json, 'external_uuid') ? undefined : json['external_uuid'],
        'scope': json['scope'],
        'addOn': !exists(json, 'add_on') ? undefined : AddOnFromJSON(json['add_on']),
        'meteredComponent': !exists(json, 'metered_component') ? undefined : MeteredComponentFromJSON(json['metered_component']),
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
    };
}

export function DiscountToJSON(value?: Discount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'start_date': value.startDate === undefined ? undefined : (value.startDate === null ? null : value.startDate.toISOString()),
        'end_date': value.endDate === undefined ? undefined : (value.endDate === null ? null : value.endDate.toISOString()),
        'billing_cycle_start_offset': value.billingCycleStartOffset,
        'billing_cycle_duration': value.billingCycleDuration,
        'coupon_id': value.couponId,
        'external_uuid': value.externalUuid,
        'scope': value.scope,
        'add_on': AddOnToJSON(value.addOn),
        'metered_component': MeteredComponentToJSON(value.meteredComponent),
        'labels': value.labels,
    };
}


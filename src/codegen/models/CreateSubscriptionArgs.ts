/* tslint:disable */
/* eslint-disable */
/**
 * Octane API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CreditPlanInputArgs,
    CreditPlanInputArgsFromJSON,
    CreditPlanInputArgsFromJSONTyped,
    CreditPlanInputArgsToJSON,
} from './CreditPlanInputArgs';
import {
    DiscountInputArgs,
    DiscountInputArgsFromJSON,
    DiscountInputArgsFromJSONTyped,
    DiscountInputArgsToJSON,
} from './DiscountInputArgs';
import {
    FeatureInputArgs,
    FeatureInputArgsFromJSON,
    FeatureInputArgsFromJSONTyped,
    FeatureInputArgsToJSON,
} from './FeatureInputArgs';
import {
    LimitInputArgs,
    LimitInputArgsFromJSON,
    LimitInputArgsFromJSONTyped,
    LimitInputArgsToJSON,
} from './LimitInputArgs';
import {
    SubscriptionAddOnInput,
    SubscriptionAddOnInputFromJSON,
    SubscriptionAddOnInputFromJSONTyped,
    SubscriptionAddOnInputToJSON,
} from './SubscriptionAddOnInput';
import {
    TrialInputArgs,
    TrialInputArgsFromJSON,
    TrialInputArgsFromJSONTyped,
    TrialInputArgsToJSON,
} from './TrialInputArgs';

/**
 * 
 * @export
 * @interface CreateSubscriptionArgs
 */
export interface CreateSubscriptionArgs {
    /**
     * 
     * @type {string}
     * @memberof CreateSubscriptionArgs
     */
    couponOverrideName?: string;
    /**
     * DEPRECATED - use discounts field
     * @type {DiscountInputArgs}
     * @memberof CreateSubscriptionArgs
     */
    discountOverride?: DiscountInputArgs | null;
    /**
     * 
     * @type {Array<DiscountInputArgs>}
     * @memberof CreateSubscriptionArgs
     */
    discounts?: Array<DiscountInputArgs>;
    /**
     * The UUID of the specific price plan version to subscribe customer to. Either provide price plan UUID or name/tag but not both.
     * @type {string}
     * @memberof CreateSubscriptionArgs
     */
    pricePlanUuid?: string;
    /**
     * 
     * @type {Array<FeatureInputArgs>}
     * @memberof CreateSubscriptionArgs
     */
    featuresOverride?: Array<FeatureInputArgs>;
    /**
     * 
     * @type {Array<SubscriptionAddOnInput>}
     * @memberof CreateSubscriptionArgs
     */
    addOns?: Array<SubscriptionAddOnInput>;
    /**
     * The tag of the specific price plan version for the given price_plan_name. Should only be set if identifying price plan by name.
     * @type {string}
     * @memberof CreateSubscriptionArgs
     */
    pricePlanTag?: string;
    /**
     * 
     * @type {Array<LimitInputArgs>}
     * @memberof CreateSubscriptionArgs
     */
    limitsOverride?: Array<LimitInputArgs>;
    /**
     * The name of the price plan to subscribe customer to. Either provide price plan UUID or name/tag but not both.
     * @type {string}
     * @memberof CreateSubscriptionArgs
     */
    pricePlanName?: string;
    /**
     * 
     * @type {TrialInputArgs}
     * @memberof CreateSubscriptionArgs
     */
    trialOverride?: TrialInputArgs;
    /**
     * Whether to align this subscripton's billing cycles to calendar boundaries (e.g., begining of every month). If the subscripiton is effective as of the middle of the month, the first cycle will be prorated appropriately.
     * @type {boolean}
     * @memberof CreateSubscriptionArgs
     */
    alignToCalendar?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof CreateSubscriptionArgs
     */
    effectiveAt?: Date;
    /**
     * Credit plan associated with this subscription.
     * @type {CreditPlanInputArgs}
     * @memberof CreateSubscriptionArgs
     */
    creditPlan?: CreditPlanInputArgs | null;
}

export function CreateSubscriptionArgsFromJSON(json: any): CreateSubscriptionArgs {
    return CreateSubscriptionArgsFromJSONTyped(json, false);
}

export function CreateSubscriptionArgsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateSubscriptionArgs {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'couponOverrideName': !exists(json, 'coupon_override_name') ? undefined : json['coupon_override_name'],
        'discountOverride': !exists(json, 'discount_override') ? undefined : DiscountInputArgsFromJSON(json['discount_override']),
        'discounts': !exists(json, 'discounts') ? undefined : ((json['discounts'] as Array<any>).map(DiscountInputArgsFromJSON)),
        'pricePlanUuid': !exists(json, 'price_plan_uuid') ? undefined : json['price_plan_uuid'],
        'featuresOverride': !exists(json, 'features_override') ? undefined : ((json['features_override'] as Array<any>).map(FeatureInputArgsFromJSON)),
        'addOns': !exists(json, 'add_ons') ? undefined : ((json['add_ons'] as Array<any>).map(SubscriptionAddOnInputFromJSON)),
        'pricePlanTag': !exists(json, 'price_plan_tag') ? undefined : json['price_plan_tag'],
        'limitsOverride': !exists(json, 'limits_override') ? undefined : ((json['limits_override'] as Array<any>).map(LimitInputArgsFromJSON)),
        'pricePlanName': !exists(json, 'price_plan_name') ? undefined : json['price_plan_name'],
        'trialOverride': !exists(json, 'trial_override') ? undefined : TrialInputArgsFromJSON(json['trial_override']),
        'alignToCalendar': !exists(json, 'align_to_calendar') ? undefined : json['align_to_calendar'],
        'effectiveAt': !exists(json, 'effective_at') ? undefined : (new Date(json['effective_at'])),
        'creditPlan': !exists(json, 'credit_plan') ? undefined : CreditPlanInputArgsFromJSON(json['credit_plan']),
    };
}

export function CreateSubscriptionArgsToJSON(value?: CreateSubscriptionArgs | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'coupon_override_name': value.couponOverrideName,
        'discount_override': DiscountInputArgsToJSON(value.discountOverride),
        'discounts': value.discounts === undefined ? undefined : ((value.discounts as Array<any>).map(DiscountInputArgsToJSON)),
        'price_plan_uuid': value.pricePlanUuid,
        'features_override': value.featuresOverride === undefined ? undefined : ((value.featuresOverride as Array<any>).map(FeatureInputArgsToJSON)),
        'add_ons': value.addOns === undefined ? undefined : ((value.addOns as Array<any>).map(SubscriptionAddOnInputToJSON)),
        'price_plan_tag': value.pricePlanTag,
        'limits_override': value.limitsOverride === undefined ? undefined : ((value.limitsOverride as Array<any>).map(LimitInputArgsToJSON)),
        'price_plan_name': value.pricePlanName,
        'trial_override': TrialInputArgsToJSON(value.trialOverride),
        'align_to_calendar': value.alignToCalendar,
        'effective_at': value.effectiveAt === undefined ? undefined : (value.effectiveAt.toISOString()),
        'credit_plan': CreditPlanInputArgsToJSON(value.creditPlan),
    };
}


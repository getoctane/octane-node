/* tslint:disable */
/* eslint-disable */
/**
 * Octane API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateVendorAvalaraSettingsArgs
 */
export interface CreateVendorAvalaraSettingsArgs {
    /**
     * Password of the Avalara account.
     * @type {string}
     * @memberof CreateVendorAvalaraSettingsArgs
     */
    password: string;
    /**
     * Username of the Avalara account.
     * @type {string}
     * @memberof CreateVendorAvalaraSettingsArgs
     */
    username: string;
    /**
     * The item description to use to represent all the lines on the Octane invoice.
     * @type {string}
     * @memberof CreateVendorAvalaraSettingsArgs
     */
    itemDescription?: string;
    /**
     * True if enabling logging for Avalara calls, false otherwise. Defaults to False.
     * @type {boolean}
     * @memberof CreateVendorAvalaraSettingsArgs
     */
    enableLogging?: boolean;
    /**
     * The tax code to associate with the item that is representing the Octane invoice.
     * @type {string}
     * @memberof CreateVendorAvalaraSettingsArgs
     */
    taxCode?: string;
    /**
     * The Avalara item code to use to represent all the line items on the Octane invoice.
     * @type {string}
     * @memberof CreateVendorAvalaraSettingsArgs
     */
    itemCode?: string;
    /**
     * The Avalara company code string to associate the Octane vendor with.
     * @type {string}
     * @memberof CreateVendorAvalaraSettingsArgs
     */
    companyCode?: string;
    /**
     * True if connecting to Avalara sandbox account, false otherwise.
     * @type {boolean}
     * @memberof CreateVendorAvalaraSettingsArgs
     */
    sandboxMode: boolean;
    /**
     * Enable/Disable the Avalara integration.
     * @type {boolean}
     * @memberof CreateVendorAvalaraSettingsArgs
     */
    enableIntegration: boolean;
    /**
     * True if the documents generated in Avalara should be committed, false otherwise. Defaults to False.
     * @type {boolean}
     * @memberof CreateVendorAvalaraSettingsArgs
     */
    commitDocuments?: boolean;
}

export function CreateVendorAvalaraSettingsArgsFromJSON(json: any): CreateVendorAvalaraSettingsArgs {
    return CreateVendorAvalaraSettingsArgsFromJSONTyped(json, false);
}

export function CreateVendorAvalaraSettingsArgsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateVendorAvalaraSettingsArgs {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'password': json['password'],
        'username': json['username'],
        'itemDescription': !exists(json, 'item_description') ? undefined : json['item_description'],
        'enableLogging': !exists(json, 'enable_logging') ? undefined : json['enable_logging'],
        'taxCode': !exists(json, 'tax_code') ? undefined : json['tax_code'],
        'itemCode': !exists(json, 'item_code') ? undefined : json['item_code'],
        'companyCode': !exists(json, 'company_code') ? undefined : json['company_code'],
        'sandboxMode': json['sandbox_mode'],
        'enableIntegration': json['enable_integration'],
        'commitDocuments': !exists(json, 'commit_documents') ? undefined : json['commit_documents'],
    };
}

export function CreateVendorAvalaraSettingsArgsToJSON(value?: CreateVendorAvalaraSettingsArgs | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'password': value.password,
        'username': value.username,
        'item_description': value.itemDescription,
        'enable_logging': value.enableLogging,
        'tax_code': value.taxCode,
        'item_code': value.itemCode,
        'company_code': value.companyCode,
        'sandbox_mode': value.sandboxMode,
        'enable_integration': value.enableIntegration,
        'commit_documents': value.commitDocuments,
    };
}


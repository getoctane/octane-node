/* tslint:disable */
/* eslint-disable */
/**
 * Octane API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MeterLabelFilterArgs
 */
export interface MeterLabelFilterArgs {
    /**
     * The label key to filter on.
     * @type {string}
     * @memberof MeterLabelFilterArgs
     */
    key?: string;
    /**
     * The operation to use for the filter.
     * @type {string}
     * @memberof MeterLabelFilterArgs
     */
    operation?: MeterLabelFilterArgsOperationEnum;
    /**
     * The value to compare against. If operation is EQUALS, this is the value to match. If operation is EXISTS, this field can not be set.
     * @type {string}
     * @memberof MeterLabelFilterArgs
     */
    value?: string;
}

/**
* @export
* @enum {string}
*/
export enum MeterLabelFilterArgsOperationEnum {
    Equals = 'EQUALS',
    Exists = 'EXISTS'
}

export function MeterLabelFilterArgsFromJSON(json: any): MeterLabelFilterArgs {
    return MeterLabelFilterArgsFromJSONTyped(json, false);
}

export function MeterLabelFilterArgsFromJSONTyped(json: any, ignoreDiscriminator: boolean): MeterLabelFilterArgs {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'key': !exists(json, 'key') ? undefined : json['key'],
        'operation': !exists(json, 'operation') ? undefined : json['operation'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function MeterLabelFilterArgsToJSON(value?: MeterLabelFilterArgs | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'key': value.key,
        'operation': value.operation,
        'value': value.value,
    };
}


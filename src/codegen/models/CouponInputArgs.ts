/* tslint:disable */
/* eslint-disable */
/**
 * Octane API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CouponInputArgs
 */
export interface CouponInputArgs {
    /**
     * 
     * @type {number}
     * @memberof CouponInputArgs
     */
    vendorId?: number;
    /**
     * 
     * @type {string}
     * @memberof CouponInputArgs
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CouponInputArgs
     */
    displayName?: string;
    /**
     * 
     * @type {Date}
     * @memberof CouponInputArgs
     */
    expirationTime?: Date;
    /**
     * 
     * @type {string}
     * @memberof CouponInputArgs
     */
    frequency: CouponInputArgsFrequencyEnum;
    /**
     * 
     * @type {number}
     * @memberof CouponInputArgs
     */
    durationLength?: number;
    /**
     * 
     * @type {string}
     * @memberof CouponInputArgs
     */
    durationUnit?: string;
    /**
     * 
     * @type {number}
     * @memberof CouponInputArgs
     */
    maxUses?: number;
    /**
     * 
     * @type {string}
     * @memberof CouponInputArgs
     */
    code?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CouponInputArgs
     */
    excludedCustomers?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CouponInputArgs
     */
    excludedPricePlans?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CouponInputArgs
     */
    discountType: CouponInputArgsDiscountTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof CouponInputArgs
     */
    discountAmount: number;
}

/**
* @export
* @enum {string}
*/
export enum CouponInputArgsFrequencyEnum {
    Once = 'ONCE',
    Recurring = 'RECURRING'
}/**
* @export
* @enum {string}
*/
export enum CouponInputArgsDiscountTypeEnum {
    Flat = 'FLAT',
    Percent = 'PERCENT'
}

export function CouponInputArgsFromJSON(json: any): CouponInputArgs {
    return CouponInputArgsFromJSONTyped(json, false);
}

export function CouponInputArgsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CouponInputArgs {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'vendorId': !exists(json, 'vendor_id') ? undefined : json['vendor_id'],
        'name': json['name'],
        'displayName': !exists(json, 'display_name') ? undefined : json['display_name'],
        'expirationTime': !exists(json, 'expiration_time') ? undefined : (new Date(json['expiration_time'])),
        'frequency': json['frequency'],
        'durationLength': !exists(json, 'duration_length') ? undefined : json['duration_length'],
        'durationUnit': !exists(json, 'duration_unit') ? undefined : json['duration_unit'],
        'maxUses': !exists(json, 'max_uses') ? undefined : json['max_uses'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'excludedCustomers': !exists(json, 'excluded_customers') ? undefined : json['excluded_customers'],
        'excludedPricePlans': !exists(json, 'excluded_price_plans') ? undefined : json['excluded_price_plans'],
        'discountType': json['discount_type'],
        'discountAmount': json['discount_amount'],
    };
}

export function CouponInputArgsToJSON(value?: CouponInputArgs | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'vendor_id': value.vendorId,
        'name': value.name,
        'display_name': value.displayName,
        'expiration_time': value.expirationTime === undefined ? undefined : (value.expirationTime.toISOString()),
        'frequency': value.frequency,
        'duration_length': value.durationLength,
        'duration_unit': value.durationUnit,
        'max_uses': value.maxUses,
        'code': value.code,
        'excluded_customers': value.excludedCustomers,
        'excluded_price_plans': value.excludedPricePlans,
        'discount_type': value.discountType,
        'discount_amount': value.discountAmount,
    };
}


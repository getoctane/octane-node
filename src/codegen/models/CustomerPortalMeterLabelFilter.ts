/* tslint:disable */
/* eslint-disable */
/**
 * Octane API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CustomerPortalLabelFilter,
    CustomerPortalLabelFilterFromJSON,
    CustomerPortalLabelFilterFromJSONTyped,
    CustomerPortalLabelFilterToJSON,
} from './CustomerPortalLabelFilter';

/**
 * 
 * @export
 * @interface CustomerPortalMeterLabelFilter
 */
export interface CustomerPortalMeterLabelFilter {
    /**
     * Primary labels with keys and values
     * @type {Array<CustomerPortalLabelFilter>}
     * @memberof CustomerPortalMeterLabelFilter
     */
    labelFilters: Array<CustomerPortalLabelFilter>;
    /**
     * Name of the meter.
     * @type {string}
     * @memberof CustomerPortalMeterLabelFilter
     */
    meterName: string;
}

export function CustomerPortalMeterLabelFilterFromJSON(json: any): CustomerPortalMeterLabelFilter {
    return CustomerPortalMeterLabelFilterFromJSONTyped(json, false);
}

export function CustomerPortalMeterLabelFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerPortalMeterLabelFilter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'labelFilters': ((json['label_filters'] as Array<any>).map(CustomerPortalLabelFilterFromJSON)),
        'meterName': json['meter_name'],
    };
}

export function CustomerPortalMeterLabelFilterToJSON(value?: CustomerPortalMeterLabelFilter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'label_filters': ((value.labelFilters as Array<any>).map(CustomerPortalLabelFilterToJSON)),
        'meter_name': value.meterName,
    };
}


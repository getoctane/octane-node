/* tslint:disable */
/* eslint-disable */
/**
 * Octane API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RevenueRecognitionEntry
 */
export interface RevenueRecognitionEntry {
    /**
     * The change in recognized revenue this month (in cents).
     * @type {number}
     * @memberof RevenueRecognitionEntry
     */
    recognized?: number;
    /**
     * The change in deferred revenue this month (in cents).
     * @type {number}
     * @memberof RevenueRecognitionEntry
     */
    deferred?: number;
    /**
     * The month in which the revenue is booked and(or) recognized.
     * @type {Date}
     * @memberof RevenueRecognitionEntry
     */
    month?: Date;
    /**
     * The newly booked amount in this month (in cents).
     * @type {number}
     * @memberof RevenueRecognitionEntry
     */
    booked?: number;
}

export function RevenueRecognitionEntryFromJSON(json: any): RevenueRecognitionEntry {
    return RevenueRecognitionEntryFromJSONTyped(json, false);
}

export function RevenueRecognitionEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): RevenueRecognitionEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'recognized': !exists(json, 'recognized') ? undefined : json['recognized'],
        'deferred': !exists(json, 'deferred') ? undefined : json['deferred'],
        'month': !exists(json, 'month') ? undefined : (new Date(json['month'])),
        'booked': !exists(json, 'booked') ? undefined : json['booked'],
    };
}

export function RevenueRecognitionEntryToJSON(value?: RevenueRecognitionEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'recognized': value.recognized,
        'deferred': value.deferred,
        'month': value.month === undefined ? undefined : (value.month.toISOString()),
        'booked': value.booked,
    };
}

